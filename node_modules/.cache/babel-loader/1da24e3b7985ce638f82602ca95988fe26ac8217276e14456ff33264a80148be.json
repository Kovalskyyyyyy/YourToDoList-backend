{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\OneDrive\\\\Plocha\\\\YourToDoList\\\\yourtodolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport MemberList from './components/MemberList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username] = useState('Username');\n  const [lists, setLists] = useState([{\n    id: 1,\n    name: 'List 1',\n    todos: ['Item 1', 'Item 2', 'Item 3', 'Item 4'],\n    members: ['Member 2', 'Member 3', 'Member 4']\n  }]);\n  const [newListName, setNewListName] = useState('');\n  const addNewList = () => {\n    if (newListName.trim()) {\n      setLists([...lists, {\n        id: Date.now(),\n        name: newListName,\n        todos: [],\n        members: []\n      }]);\n      setNewListName('');\n    }\n  };\n  const updateTodos = (listId, newTodos) => {\n    setLists(lists.map(list => list.id === listId ? {\n      ...list,\n      todos: newTodos\n    } : list));\n  };\n  const updateMembers = (listId, newMembers) => {\n    setLists(lists.map(list => list.id === listId ? {\n      ...list,\n      members: newMembers\n    } : list));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter new list name\",\n        value: newListName,\n        onChange: e => setNewListName(e.target.value),\n        className: \"new-list-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewList,\n        className: \"add-list-btn\",\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(TodoList, {\n          listName: list.name,\n          todos: list.todos,\n          setTodos: newTodos => updateTodos(list.id, newTodos)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MemberList, {\n          members: list.members,\n          setMembers: newMembers => updateMembers(list.id, newMembers)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, list.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WqvzlgJTk3TDn5k72cL9wULrmxQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TodoList","MemberList","jsxDEV","_jsxDEV","App","_s","username","lists","setLists","id","name","todos","members","newListName","setNewListName","addNewList","trim","Date","now","updateTodos","listId","newTodos","map","list","updateMembers","newMembers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","listName","setTodos","setMembers","_c","$RefreshReg$"],"sources":["C:/Users/lukas/OneDrive/Plocha/YourToDoList/yourtodolist/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport MemberList from './components/MemberList';\nimport './App.css';\n\nfunction App() {\n    const [username] = useState('Username');\n    const [lists, setLists] = useState([\n        { id: 1, name: 'List 1', todos: ['Item 1', 'Item 2', 'Item 3', 'Item 4'], members: ['Member 2', 'Member 3', 'Member 4'] }\n    ]);\n    const [newListName, setNewListName] = useState('');\n\n    const addNewList = () => {\n        if (newListName.trim()) {\n            setLists([\n                ...lists,\n                { id: Date.now(), name: newListName, todos: [], members: [] }\n            ]);\n            setNewListName('');\n        }\n    };\n\n    const updateTodos = (listId, newTodos) => {\n        setLists(lists.map(list => list.id === listId ? { ...list, todos: newTodos } : list));\n    };\n\n    const updateMembers = (listId, newMembers) => {\n        setLists(lists.map(list => list.id === listId ? { ...list, members: newMembers } : list));\n    };\n\n    return (\n        <div className=\"app\">\n            <Header username={username} />\n            <div className=\"add-list-section\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter new list name\" \n                    value={newListName}\n                    onChange={(e) => setNewListName(e.target.value)} \n                    className=\"new-list-input\"\n                />\n                <button onClick={addNewList} className=\"add-list-btn\">Add List</button>\n            </div>\n            <div className=\"content\">\n                {lists.map((list) => (\n                    <div key={list.id} className=\"list-container\">\n                        <TodoList \n                            listName={list.name} \n                            todos={list.todos} \n                            setTodos={(newTodos) => updateTodos(list.id, newTodos)}\n                        />\n                        <MemberList \n                            members={list.members} \n                            setMembers={(newMembers) => updateMembers(list.id, newMembers)}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
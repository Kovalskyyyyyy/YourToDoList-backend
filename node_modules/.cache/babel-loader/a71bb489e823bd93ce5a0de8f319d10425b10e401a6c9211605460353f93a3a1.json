{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\OneDrive\\\\Plocha\\\\YourToDoList\\\\yourtodolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport MemberList from './components/MemberList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username] = useState('Username');\n  const [lists, setLists] = useState([{\n    id: 1,\n    name: 'List 1',\n    todos: ['Item 1'],\n    members: ['Member 2', 'Member 3', 'Member 4'],\n    isEditing: false\n  }, {\n    id: 2,\n    name: 'List 2',\n    todos: [],\n    members: [],\n    isEditing: false\n  }]);\n  const [newListName, setNewListName] = useState('');\n  const [selectedListId, setSelectedListId] = useState(null); // Manage selected list\n  const [isModalOpen, setIsModalOpen] = useState(false); // Control modal visibility\n\n  const addNewList = () => {\n    if (newListName.trim()) {\n      setLists([...lists, {\n        id: Date.now(),\n        name: newListName,\n        todos: [],\n        members: [],\n        isEditing: false\n      }]);\n      setNewListName('');\n    }\n  };\n  const updateTodos = (listId, newTodos) => {\n    setLists(lists.map(list => list.id === listId ? {\n      ...list,\n      todos: newTodos\n    } : list));\n  };\n  const updateMembers = (listId, newMembers) => {\n    setLists(lists.map(list => list.id === listId ? {\n      ...list,\n      members: newMembers\n    } : list));\n  };\n  const toggleEditMode = listId => {\n    setLists(lists.map(list => list.id === listId ? {\n      ...list,\n      isEditing: !list.isEditing\n    } : list));\n  };\n  const handleNameChange = (listId, newName) => {\n    setLists(lists.map(list => list.id === listId ? {\n      ...list,\n      name: newName,\n      isEditing: false\n    } : list));\n  };\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  const selectList = listId => {\n    setSelectedListId(listId);\n    setIsModalOpen(false);\n  };\n  const filteredList = selectedListId ? lists.find(list => list.id === selectedListId) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      username: username,\n      onLogoClick: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), lists.map(list => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selectList(list.id),\n          className: \"modal-list-item\",\n          children: list.name\n        }, list.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleModal,\n          className: \"close-modal\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), !selectedListId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter new list name\",\n        value: newListName,\n        onChange: e => setNewListName(e.target.value),\n        className: \"new-list-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewList,\n        className: \"add-list-btn\",\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-container\",\n        children: [/*#__PURE__*/_jsxDEV(TodoList, {\n          list: filteredList,\n          onToggleEdit: () => toggleEditMode(filteredList.id),\n          onNameChange: newName => handleNameChange(filteredList.id, newName),\n          todos: filteredList.todos,\n          setTodos: newTodos => updateTodos(filteredList.id, newTodos)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MemberList, {\n          members: filteredList.members,\n          setMembers: newMembers => updateMembers(filteredList.id, newMembers)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, filteredList.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"lNDF+3D6in/jcBkJy8OhliumpNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TodoList","MemberList","jsxDEV","_jsxDEV","App","_s","username","lists","setLists","id","name","todos","members","isEditing","newListName","setNewListName","selectedListId","setSelectedListId","isModalOpen","setIsModalOpen","addNewList","trim","Date","now","updateTodos","listId","newTodos","map","list","updateMembers","newMembers","toggleEditMode","handleNameChange","newName","toggleModal","selectList","filteredList","find","className","children","onLogoClick","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","onToggleEdit","onNameChange","setTodos","setMembers","_c","$RefreshReg$"],"sources":["C:/Users/lukas/OneDrive/Plocha/YourToDoList/yourtodolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport MemberList from './components/MemberList';\nimport './App.css';\n\nfunction App() {\n    const [username] = useState('Username');\n    const [lists, setLists] = useState([\n        { id: 1, name: 'List 1', todos: ['Item 1'], members: ['Member 2', 'Member 3', 'Member 4'], isEditing: false },\n        { id: 2, name: 'List 2', todos: [], members: [], isEditing: false },\n    ]);\n    const [newListName, setNewListName] = useState('');\n    const [selectedListId, setSelectedListId] = useState(null); // Manage selected list\n    const [isModalOpen, setIsModalOpen] = useState(false); // Control modal visibility\n\n    const addNewList = () => {\n        if (newListName.trim()) {\n            setLists([\n                ...lists,\n                { id: Date.now(), name: newListName, todos: [], members: [], isEditing: false }\n            ]);\n            setNewListName('');\n        }\n    };\n\n    const updateTodos = (listId, newTodos) => {\n        setLists(lists.map(list => list.id === listId ? { ...list, todos: newTodos } : list));\n    };\n\n    const updateMembers = (listId, newMembers) => {\n        setLists(lists.map(list => list.id === listId ? { ...list, members: newMembers } : list));\n    };\n\n    const toggleEditMode = (listId) => {\n        setLists(lists.map(list => list.id === listId ? { ...list, isEditing: !list.isEditing } : list));\n    };\n\n    const handleNameChange = (listId, newName) => {\n        setLists(lists.map(list => list.id === listId ? { ...list, name: newName, isEditing: false } : list));\n    };\n\n    const toggleModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    const selectList = (listId) => {\n        setSelectedListId(listId);\n        setIsModalOpen(false);\n    };\n\n    const filteredList = selectedListId ? lists.find(list => list.id === selectedListId) : null;\n\n    return (\n        <div className=\"app\">\n            <Header username={username} onLogoClick={toggleModal} />\n            {isModalOpen && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h2>Select a List</h2>\n                        {lists.map((list) => (\n                            <button\n                                key={list.id}\n                                onClick={() => selectList(list.id)}\n                                className=\"modal-list-item\"\n                            >\n                                {list.name}\n                            </button>\n                        ))}\n                        <button onClick={toggleModal} className=\"close-modal\">Close</button>\n                    </div>\n                </div>\n            )}\n            {!selectedListId ? (\n                <div className=\"add-list-section\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter new list name\"\n                        value={newListName}\n                        onChange={(e) => setNewListName(e.target.value)}\n                        className=\"new-list-input\"\n                    />\n                    <button onClick={addNewList} className=\"add-list-btn\">Add List</button>\n                </div>\n            ) : (\n                <div className=\"content\">\n                    <div key={filteredList.id} className=\"list-container\">\n                        <TodoList\n                            list={filteredList}\n                            onToggleEdit={() => toggleEditMode(filteredList.id)}\n                            onNameChange={(newName) => handleNameChange(filteredList.id, newName)}\n                            todos={filteredList.todos}\n                            setTodos={(newTodos) => updateTodos(filteredList.id, newTodos)}\n                        />\n                        <MemberList\n                            members={filteredList.members}\n                            setMembers={(newMembers) => updateMembers(filteredList.id, newMembers)}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\OneDrive\\\\Plocha\\\\YourToDoList\\\\yourtodolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport MemberList from './components/MemberList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username] = useState('Username');\n  const [lists, setLists] = useState([{\n    id: 1,\n    name: 'List 1',\n    todos: ['Item 1', 'Item 2', 'Item 3', 'Item 4']\n  }]);\n  const [members, setMembers] = useState(['Member 2', 'Member 3', 'Member 4']);\n  const [newListName, setNewListName] = useState('');\n  const addNewList = () => {\n    if (newListName.trim()) {\n      setLists([...lists, {\n        id: Date.now(),\n        name: newListName,\n        todos: []\n      }]);\n      setNewListName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-list-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter new list name\",\n        value: newListName,\n        onChange: e => setNewListName(e.target.value),\n        className: \"new-list-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewList,\n        className: \"add-list-btn\",\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [lists.map(list => /*#__PURE__*/_jsxDEV(TodoList, {\n        listName: list.name,\n        todos: list.todos,\n        setTodos: newTodos => {\n          setLists(lists.map(l => l.id === list.id ? {\n            ...l,\n            todos: newTodos\n          } : l));\n        }\n      }, list.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(MemberList, {\n        members: members,\n        setMembers: setMembers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RfsV0cg+E1MA2w/1ITE6qaIwLrc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TodoList","MemberList","jsxDEV","_jsxDEV","App","_s","username","lists","setLists","id","name","todos","members","setMembers","newListName","setNewListName","addNewList","trim","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","list","listName","setTodos","newTodos","l","_c","$RefreshReg$"],"sources":["C:/Users/lukas/OneDrive/Plocha/YourToDoList/yourtodolist/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport MemberList from './components/MemberList';\nimport './App.css';\n\nfunction App() {\n    const [username] = useState('Username');\n    const [lists, setLists] = useState([\n        { id: 1, name: 'List 1', todos: ['Item 1', 'Item 2', 'Item 3', 'Item 4'] }\n    ]);\n    const [members, setMembers] = useState(['Member 2', 'Member 3', 'Member 4']);\n    const [newListName, setNewListName] = useState('');\n\n    const addNewList = () => {\n        if (newListName.trim()) {\n            setLists([\n                ...lists,\n                { id: Date.now(), name: newListName, todos: [] }\n            ]);\n            setNewListName('');\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <Header username={username} />\n            <div className=\"add-list-section\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter new list name\" \n                    value={newListName}\n                    onChange={(e) => setNewListName(e.target.value)} \n                    className=\"new-list-input\"\n                />\n                <button onClick={addNewList} className=\"add-list-btn\">Add List</button>\n            </div>\n            <div className=\"content\">\n                {lists.map((list) => (\n                    <TodoList \n                        key={list.id} \n                        listName={list.name} \n                        todos={list.todos} \n                        setTodos={(newTodos) => {\n                            setLists(lists.map(l => l.id === list.id ? { ...l, todos: newTodos } : l));\n                        }} \n                    />\n                ))}\n                <MemberList members={members} setMembers={setMembers} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}